%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 170.000000 237.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 85 119
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 85 119
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 85 118.5 rc
-127.5 201 m
450 201 l
450 -190.5 l
-127.5 -190.5 l
h
-127.5 201 m
f
4 w
1 J
1 j
0.60000002 i
0.113725 0.35294101 0.67058802 sc
0.5 0 0 -0.5 -127.5 201 cm
283.46457 311.81104 m
368.50394 396.8504 l
S
2 w
1 1 1 sc
283.46457 311.81104 m
368.50394 396.8504 l
S
4 w
0.113725 0.35294101 0.67058802 sc
368.50394 396.8504 m
340.15747 170.07874 l
S
2 w
1 1 1 sc
368.50394 396.8504 m
340.15747 170.07874 l
S
0.5 w
0 0 0 sc
273.16306 293.76608 m
273.16306 257.48346 l
S
0 i
CM
9.0815239 74.25827 m
8.3315239 72.25827 l
9.8315239 72.25827 l
h
9.0815239 74.25827 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
273.16306 253.48346 m
271.66306 257.48346 l
274.66306 257.48346 l
h
273.16306 253.48346 m
S
1 J
1 j
0.60000002 i
273.16306 293.76608 m
309.44568 293.76608 l
S
0 i
CM
29.222834 54.116959 m
27.222834 54.866959 l
27.222834 53.366959 l
h
29.222834 54.116959 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
313.44568 293.76608 m
309.44568 292.26608 l
309.44568 295.26608 l
h
313.44568 293.76608 m
S
1 J
1 j
0.60000002 i
273.16306 293.76608 m
260.27826 319.53564 l
S
0 i
CM
1.7447053 39.443321 m
3.309953 40.896767 l
1.9683121 41.567585 l
h
1.7447053 39.443321 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
258.48941 323.11334 m
261.6199 320.20648 l
258.93661 318.86484 l
h
258.48941 323.11334 m
S
1 J
1 j
0.60000002 i
353.61267 279.36411 m
349.19095 243.35193 l
S
0 i
CM
46.85173 81.309128 m
46.351059 79.232628 l
47.839878 79.415436 l
h
46.85173 81.309128 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
348.70346 239.38174 m
347.70212 243.53474 l
350.67975 243.16913 l
h
348.70346 239.38174 m
S
1 J
1 j
0.60000002 i
353.61267 279.36411 m
389.62485 274.94238 l
S
0 i
CM
69.297516 63.772552 m
67.221024 64.273224 l
67.403824 62.784405 l
h
69.297516 63.772552 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
393.59503 274.4549 m
389.44205 273.45355 l
389.80765 276.43118 l
h
393.59503 274.4549 m
S
1 J
1 j
0.60000002 i
353.61267 279.36411 m
343.96445 306.51184 l
S
0 i
CM
43.812473 45.85955 m
45.188923 47.492916 l
43.775532 47.995232 l
h
43.812473 45.85955 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
342.62494 310.28091 m
345.37784 307.01416 l
342.55106 306.00955 l
h
342.62494 310.28091 m
S
1 J
1 j
0.60000002 i
321.35202 349.42194 m
321.35202 313.13931 l
S
0 i
CM
33.176014 46.430344 m
32.426014 44.430344 l
33.926014 44.430344 l
h
33.176014 46.430344 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
321.35202 309.13931 m
319.85202 313.13931 l
322.85202 313.13931 l
h
321.35202 309.13931 m
S
1 J
1 j
0.60000002 i
321.35202 349.42194 m
347.57599 326.56619 l
S
0 i
CM
47.795715 39.030975 m
45.795216 38.282303 l
46.780769 37.151512 l
h
47.795715 39.030975 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
350.59143 323.93805 m
346.59042 325.43539 l
348.56152 327.69696 l
h
350.59143 323.93805 m
S
1 J
1 j
0.60000002 i
321.35202 349.42194 m
345.00302 373.31244 l
S
0 i
CM
46.408585 12.922461 m
45.534512 14.871432 l
44.468521 13.816129 l
h
46.408585 12.922461 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
347.81717 376.15509 m
346.06903 372.25714 l
343.93704 374.36774 l
h
347.81717 376.15509 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
368.50394 396.8504 m
359.19806 322.40344 l
S
368.50394 396.8504 m
368.50394 323.1496 l
S
283.46457 311.81104 m
314.64566 342.99213 l
S
283.46457 312.57153 m
268.25427 342.99213 l
S
[] 0 d
279.46768 320.56531 m
279.46768 320.56531 286.21149 324.07986 290.61224 318.95871 c
S
359.37399 323.81073 m
359.37399 323.81073 364.14767 320.0318 368.50394 323.1496 c
S
0 i
0.60000002 0.152941 0.152941 sc
CM
34.301891 27.029274 m
34.855392 26.475777 34.855392 25.578379 34.301891 25.024879 c
33.748394 24.471378 32.850994 24.471378 32.297497 25.024879 c
31.743996 25.578379 31.743996 26.475777 32.297497 27.029274 c
32.850994 27.582777 33.748394 27.582777 34.301891 27.029274 c
f
1 w
0.60000002 i
0.5 0 0 -0.5 -127.5 201 cm
323.60379 347.94144 m
324.71078 349.04846 324.71078 350.84323 323.60379 351.95023 c
322.4968 353.05725 320.702 353.05725 319.595 351.95023 c
318.48798 350.84323 318.48798 349.04846 319.595 347.94144 c
320.702 346.83444 322.4968 346.83444 323.60379 347.94144 c
S
0 i
CM
50.42543 62.206879 m
50.978931 61.653381 50.978931 60.755981 50.42543 60.202484 c
49.871933 59.648983 48.974533 59.648983 48.421036 60.202484 c
47.867535 60.755981 47.867535 61.653381 48.421036 62.206879 c
48.974533 62.76038 49.871933 62.76038 50.42543 62.206879 c
f
0.60000002 i
0.5 0 0 -0.5 -127.5 201 cm
355.85086 277.58624 m
356.95786 278.69324 356.95786 280.48804 355.85086 281.59503 c
354.74387 282.70203 352.94907 282.70203 351.84207 281.59503 c
350.73508 280.48804 350.73508 278.69324 351.84207 277.58624 c
352.94907 276.47925 354.74387 276.47925 355.85086 277.58624 c
S
0.5 w
0 0 0 sc
292.18686 375.67599 m
259.28461 342.77377 l
S
0 i
CM
1.2584264 30.496996 m
2.1423099 28.552454 l
2.1423099 29.613113 l
2.1423099 29.613113 l
3.20297 29.613113 l
h
1.2584264 30.496996 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
257.51685 341.00601 m
259.28461 344.89508 l
259.28461 342.77377 l
259.28461 342.77377 l
261.40594 342.77377 l
h
257.51685 341.00601 m
S
CM
19.47731 12.278113 m
18.593426 14.222657 l
18.593426 13.161997 l
18.593426 13.161997 l
17.532766 13.161997 l
h
19.47731 12.278113 m
f
0.5 0 0 -0.5 -127.5 201 cm
293.95462 377.44379 m
292.18686 373.55469 l
292.18686 375.67599 l
292.18686 375.67599 l
290.06552 375.67599 l
h
293.95462 377.44379 m
S
1 J
1 j
0.60000002 i
408.16367 280.42743 m
421.90326 390.34433 l
S
0 i
CM
83.606682 4.5874939 m
84.102821 6.6650758 l
83.451637 5.8278413 l
83.451637 5.8278413 l
82.614403 6.4790235 l
h
83.606682 4.5874939 m
f
0 J
0 j
0.5 0 0 -0.5 -127.5 201 cm
422.21335 392.82501 m
423.20563 388.66986 l
421.90326 390.34433 l
421.90326 390.34433 l
420.22879 389.04196 l
h
422.21335 392.82501 m
S
CM
76.426788 62.026638 m
75.930649 59.949055 l
76.581833 60.786289 l
76.581833 60.786289 l
77.419067 60.135109 l
h
76.426788 62.026638 m
f
0.5 0 0 -0.5 -127.5 201 cm
407.85358 277.94672 m
406.8613 282.1019 l
408.16367 280.42743 l
408.16367 280.42743 l
409.83813 281.7298 l
h
407.85358 277.94672 m
S
ep
end
%%Trailer
%%EOF
