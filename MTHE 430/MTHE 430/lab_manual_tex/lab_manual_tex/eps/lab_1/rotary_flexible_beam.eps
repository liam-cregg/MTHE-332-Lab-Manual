%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 157.000000 134.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 79 67
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 79 67
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 78.5 67 rc
-54.5 217.5 m
523 217.5 l
523 -174 l
-54.5 -174 l
h
-54.5 217.5 m
f
0.5 w
1 J
1 j
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -54.5 217.5 cm
234.78923 391.66745 m
239.21724 396.09546 239.21724 403.27463 234.78923 407.70261 c
230.36124 412.13062 223.18207 412.13062 218.75407 407.70261 c
214.32607 403.27463 214.32607 396.09546 218.75407 391.66745 c
223.18207 387.23944 230.36124 387.23944 234.78923 391.66745 c
S
0 i
0.60000002 0.152941 0.152941 sc
CM
59.888023 18.659679 m
60.441525 18.10618 60.441525 17.208782 59.888023 16.655285 c
59.334526 16.101782 58.437126 16.101782 57.883629 16.655285 c
57.330128 17.208782 57.330128 18.10618 57.883629 18.659679 c
58.437126 19.213181 59.334526 19.213181 59.888023 18.659679 c
f
1 w
0.60000002 i
0.5 0 0 -0.5 -54.5 217.5 cm
228.77605 397.68063 m
229.88306 398.78763 229.88306 400.58243 228.77605 401.68942 c
227.66905 402.79645 225.87425 402.79645 224.76726 401.68942 c
223.66025 400.58243 223.66025 398.78763 224.76726 397.68063 c
225.87425 396.57364 227.66905 396.57364 228.77605 397.68063 c
S
0.5 w
0 0 0 sc
125.76147 400.44556 m
125.76147 364.16293 l
S
0 i
CM
8.3807373 37.418533 m
7.6307373 35.418533 l
9.1307373 35.418533 l
h
8.3807373 37.418533 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
125.76147 360.16293 m
124.26147 364.16293 l
127.26147 364.16293 l
h
125.76147 360.16293 m
S
1 J
1 j
0.60000002 i
125.76147 400.44556 m
162.0441 400.44556 l
S
0 i
CM
28.522047 17.277224 m
26.522047 18.027224 l
26.522047 16.527224 l
h
28.522047 17.277224 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
166.0441 400.44556 m
162.0441 398.94556 l
162.0441 401.94556 l
h
166.0441 400.44556 m
S
1 J
1 j
0.60000002 i
125.76147 400.44556 m
112.87669 426.21512 l
S
0 i
CM
1.0439184 2.6035867 m
2.6091659 4.0570307 l
1.2675252 4.7278514 l
h
1.0439184 2.6035867 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
111.08784 429.79282 m
114.21833 426.88593 l
111.53505 425.54431 l
h
111.08784 429.79282 m
S
4 w
1 J
1 j
0.60000002 i
0.113725 0.35294101 0.67058802 sc
221.23152 389.78879 m
215.44667 380.20944 205.08408 364.80249 189.92126 348.66141 c
165.02611 322.16013 138.89764 306.14172 138.89764 306.14172 c
S
2 w
1 1 1 sc
221.23152 389.78879 m
215.44667 380.20944 205.08408 364.80249 189.92126 348.66141 c
165.02611 322.16013 138.89764 306.14172 138.89764 306.14172 c
S
0.5 w
[
4
4
] 0 d
0 0 0 sc
226.77165 388.34644 m
226.77165 340.15747 l
S
0 i
0.60000002 0.152941 0.152941 sc
CM
40.399292 45.289589 m
40.952793 44.736092 40.952793 43.838696 40.399292 43.285194 c
39.845795 42.731693 38.948395 42.731693 38.394897 43.285194 c
37.841396 43.838696 37.841396 44.736092 38.394897 45.289589 c
38.948395 45.843094 39.845795 45.843094 40.399292 45.289589 c
f
1 w
[] 0 d
0.60000002 i
0.5 0 0 -0.5 -54.5 217.5 cm
189.79858 344.42081 m
190.90559 345.5278 190.90559 347.3226 189.79858 348.4296 c
188.69159 349.53662 186.89679 349.53662 185.78979 348.4296 c
184.6828 347.3226 184.6828 345.5278 185.78979 344.42081 c
186.89679 343.31381 188.69159 343.31381 189.79858 344.42081 c
S
0.5 w
0 0 0 sc
227.67044 400.63751 m
259.0921 382.49622 l
S
0 i
CM
76.778107 27.251898 m
74.671059 26.901417 l
75.421059 25.602379 l
h
76.778107 27.251898 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
262.55621 380.49622 m
258.3421 381.19717 l
259.8421 383.79523 l
h
262.55621 380.49622 m
S
1 J
1 j
0.60000002 i
227.90714 400.44556 m
215.02235 426.21512 l
S
0 i
CM
52.116753 2.6035867 m
53.681999 4.0570307 l
52.340359 4.7278514 l
h
52.116753 2.6035867 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
213.23351 429.79282 m
216.364 426.88593 l
213.68073 425.54431 l
h
213.23351 429.79282 m
S
1 J
1 j
0.60000002 i
206.92914 364.71252 m
206.92914 364.71252 216.83401 354.81549 226.77165 363.55582 c
S
[
8
4
1
4
] 0 d
0.49411801 0.49411801 0.49411801 sc
227.67044 400.63751 m
138.89764 306.14172 l
S
[] 0 d
0 0 0 sc
187.92924 346.83029 m
163.18456 320.29486 l
S
0 i
CM
25.728285 58.815281 m
26.543766 56.841076 l
27.640797 57.864071 l
h
25.728285 58.815281 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
160.45657 317.36945 m
162.08752 321.31784 l
164.28159 319.27185 l
h
160.45657 317.36945 m
S
1 J
1 j
0.60000002 i
187.92924 346.83029 m
188.22807 346.2861 l
214.44788 322.0675 l
S
0 i
CM
54.193108 57.823288 m
52.21505 57.017189 l
53.23283 55.915314 l
h
54.193108 57.823288 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
217.38622 319.35342 m
213.4301 320.96561 l
215.46565 323.16937 l
h
217.38622 319.35342 m
S
1 J
1 j
0.60000002 i
187.98462 346.58728 m
175.09984 372.35684 l
S
0 i
CM
32.155495 29.532721 m
33.720741 30.986164 l
32.379101 31.656984 l
h
32.155495 29.532721 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
173.31099 375.93457 m
176.44148 373.02768 l
173.75821 371.68604 l
h
173.31099 375.93457 m
S
1 J
1 j
0.60000002 i
227.67044 400.63751 m
209.52913 369.21585 l
S
0 i
CM
49.264565 34.62413 m
49.615047 32.517078 l
50.914085 33.267078 l
h
49.264565 34.62413 m
f
0 J
0 j
0.5 0 0 -0.5 -54.5 217.5 cm
207.52913 365.75174 m
208.23009 369.96585 l
210.82817 368.46585 l
h
207.52913 365.75174 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
227.03329 399.53397 m
198.68686 350.43649 l
S
[] 0 d
202.83817 357.62677 m
202.83817 357.62677 195.6161 354.41693 192.7932 363.51181 c
S
ep
end
%%Trailer
%%EOF
